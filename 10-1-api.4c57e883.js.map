{"mappings":"AAoBwB,MAAlBA,EAASC,SAASC,cAAc,cAChCC,EAAOF,SAASC,cAAc,YAEfF,EAAdI,iBAAiB,UACxB,SAAkBC,GAChBA,EAAMC,iBAEgB,MAAhBC,MAAEA,EAAKC,KAAEA,GAASH,EAAMI,cAAcC,UAOvC,SAAaC,EAAMH,GAIxB,OAAOI,MACL,mFAA8CD,UAAaH,KAC3DK,MAAKC,IAEa,IAAbA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,MAAM,G,EAhBDC,CAAZZ,EAAMa,MAAOZ,EAAKY,OAC1BP,MAAKQ,GAASlB,EAAKmB,UAAyBD,EAAKE,SAASC,YAsB1DC,KACC,EAACC,KACCA,EACAC,KAAKC,UACHA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,OAGrB,2BACYD,WAAcC,qBACrBA,sBACCL,uBACAE,wBAGTI,KAAK,MApCLC,OAAMC,GAAOC,QAAQC,IAAIF,I","sources":["src/js/10-1-api.js"],"sourcesContent":["// 1. Postman - використовується для створення запиту на backend без написання коду\n// 2. Корисна інформація та АРІ для тесту\n// https://www.weatherapi.com/\n// https://uk.wikipedia.org/wiki/SOAP\n// https://uk.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BA%D0%BE%D0%B4%D1%96%D0%B2_%D1%81%D1%82%D0%B0%D0%BD%D1%83_HTTP#4xx_%D0%9A%D0%BB%D1%96%D1%94%D0%BD%D1%82%D1%81%D1%8C%D0%BA%D0%B0_%D0%BF%D0%BE%D0%BC%D0%B8%D0%BB%D0%BA%D0%B0\n// https://www.weatherapi.com/docs/\n// https://api.privatbank.ua/#p24/exchange\n// https://handlebarsjs.com/guide/#what-is-handlebars\n// https://swapi.dev/\n// https://www.udemy.com/\n\n// 3. Синтаксис\n// ?- вказує на старт параметрів запиту.\n// пара ім'я=значення.\n// & використовується для зазначення смислового «І», розділяючи параметри в рядку запиту.\n// Приклад :const url = \"https://jsonplaceholder.typicode.com/users?_limit=7&_sort=name\";\n\n// 4. Створення прогноза погоди\n// - за допомогою Poatman створили запит http://api.weatherapi.com/v1/forecast.json?key=453cf0534c434bc7ba1221606230212 &q=Paris&days=5\n\nconst search = document.querySelector('.js-search');\nconst list = document.querySelector('.js-list');\n// Додаємо слухача на форму\nsearch.addEventListener('submit', onSearch);\nfunction onSearch(event) {\n  event.preventDefault();\n  // Робимо деструктуризацію,\n  const { query, days } = event.currentTarget.elements;\n  //   Функція отримання значень\n  getWeather(query.value, days.value)\n    .then(data => (list.innerHTML = createMarkup(data.forecast.forecastday)))\n    .catch(err => console.log(err));\n}\n// Запит на backend\nfunction getWeather(city, days) {\n  // http://api.weatherapi.com/v1/forecast.json?key=453cf0534c434bc7ba1221606230212 &q=Paris&days=5\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const API_KEY = '47cce444510845a3b5890337232811';\n  return fetch(\n    `${BASE_URL}/forecast.json?key=${API_KEY}&q=${city}&days=${days}`\n  ).then(response => {\n    // перевірка статусу ok : true  aбо false\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n}\n// Створення розмітки\nfunction createMarkup(arr) {\n  // Перебираємо отриманий масив\n  return arr\n    .map(\n      ({\n        date,\n        day: {\n          avgtemp_c,\n          condition: { icon, text },\n        },\n      }) =>\n        `<li>\n        <img src=\"${icon}\" alt=\"${text}\" />\n        <p>${text}</p>\n        <h2>${date}</h2>\n        <h3>${avgtemp_c}</h3>\n      </li>`\n    )\n    .join('');\n}\n"],"names":["$fc4c0929f1026062$var$search","document","querySelector","$fc4c0929f1026062$var$list","addEventListener","event","preventDefault","query","days","currentTarget","elements","city","fetch","then","response","ok","Error","statusText","json","$fc4c0929f1026062$var$getWeather","value","data","innerHTML","forecast","forecastday","map","date","day","avgtemp_c","condition","icon","text","join","catch","err","console","log"],"version":3,"file":"10-1-api.4c57e883.js.map"}